security:
  encoders:
    FOS\UserBundle\Model\UserInterface: sha512
    Symfony\Component\Security\Core\User\User: plaintext
    Zoba\UserBundle\Entity\User:
      algorithm:        sha1
      encode_as_base64: false
      iterations:       1
      
  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    SONATA:
      - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are not using acl then this line must be uncommented
 
  providers:
#    chain_provider:
#      chain:
#         providers: [in_memory, fos_userbundle]
    fos_userbundle:
      id: fos_user.user_manager
      #id: fos_user.user_provider.username
#    in_memory:
#      memory:
#        users:
#          user:  { password: user, roles: [ 'ROLE_USER' ] }
#          admin: { password: admin, roles: [ 'ROLE_ADMIN' ] }

  firewalls:
    admin:
      switch_user:        true
      context:            user
      pattern:            /admin(.*)
      form_login:
          provider:       fos_userbundle
          login_path:     /admin/login
          use_forward:    false
          check_path:     /admin/login_check
          failure_path:   null
          use_referer:    true
      logout:
          path:           /admin/logout
          target:         /admin/login

      anonymous:    true

    dev:
      pattern:  ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern:  ^/login$
      security: false

    main:
      pattern:  ^/
      form_login:
        login_path: /login
        check_path: /login_check
        provider:       fos_userbundle
        use_forward:    false
        failure_path:   null
      logout:
        path:   /logout
        target: /holidays_index

  access_control:
    # URL of FOSUserBundle which need to be available to anonymous users
    - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

    # -> custom access control for the admin area of the URL
    - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    # -> end

    - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

    # Secured part of the site
    # This config requires being logged for the whole site and having the admin role for the admin part.
    # Change these rules to adapt them to your needs
    - { path: ^/admin, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
    - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
    #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }


  
#  jms_security_extra:
#    secure_controllers:  true
#    secure_all_services: false